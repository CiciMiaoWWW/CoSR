{
    "task": "ll_sr_"     //  root/task/images-models-options, pay attention to the difference between "msrresnet0" and "msrresnet1"
    , "model": "ours" // "plain" | "plain2" if two inputs
    , "gpu_ids": [0]
    , "dist": true
  
    , "scale": 4       // broadcast to "netG" if SISR
    , "n_channels": 3  // broadcast to "datasets", 1 for grayscale, 3 for color

    // , "sigma": 0       // 15, 25, 50 for DnCNN | [0, 75] for FDnCNN and FFDNet
    // , "sigma_test": 0  // 15, 25, 50 for DnCNN, FDnCNN and FFDNet, 0 for SR
  
    // , "merge_bn": false              // if no BN exists, set false
    // , "merge_bn_startpoint": 400000  // merge BN after N iterations
  
    , "path": {
      "root": "superresolution"      // "denoising" | "superresolution"
      , "pretrained_netG": null      // path of pretrained model
      , "pretrained_netE": null      // path of pretrained model
    }
  
    , "datasets": {
      "train": {
        "name": "train_dataset"           // just name
        , "dataset_type": "sr"            // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch"
        , "dataroot_H": "/data/Cici1996/DIV2K/DIV2K_train_HR"// path of H training dataset
        , "dataroot_L": "/data/Cici1996/DIV2K/DIV2K_train_LR_bicubic/X4"              // path of L training dataset
        , "H_size": 128                    // patch size 40 | 64 | 96 | 128 | 192
        , "dataloader_shuffle": true
        , "dataloader_num_workers": 4      // recover to 16 in training
        , "dataloader_batch_size": 16     // batch size 1 | 16 | 32 | 48 | 64 | 128
      }
      , "test": {
        "name": "test_dataset"            // just name
        , "dataset_type": "sr"            // "dncnn" | "dnpatch" | "fdncnn" | "ffdnet" | "sr" | "srmd" | "dpsr" | "plain" | "plainpatch"
        , "dataroot_H": "/data/Cici1996/DIV2K/DIV2K_test_tmp_HR"             // path of H testing dataset
        , "dataroot_L": "/data/Cici1996/DIV2K/DIV2K_test_tmp_LR_bicubic/X4"              // path of L testing dataset
      }
    }
  
    , "netG": {
        "net_type": "hf_in3con_merge_hf_db" 
        , "upscale": 4                      // 2 | 3  | 4 | 8
        , "in_chans": 3
        , "img_size": 64                    // For fair comparison, LR patch size is set to 48 or 64 when compared with RCAN or RRDB.
        , "window_size": 8  
        , "img_range": 1.0 
        , "depths": [6, 6, 6, 6, 6, 6] 
        , "embed_dim": 180 
        , "num_heads": [6, 6, 6, 6, 6, 6]
        , "mlp_ratio": 2 
        , "upsampler": "pixelshuffle"        // "pixelshuffle" | "pixelshuffledirect" | "nearest+conv" | null
        , "resi_connection": "1conv"        // "1conv" | "3conv"
    
        , "init_type": "default"
      }
  
    , "train": {
      "G_lossfn_type": "l1"               // "l1" preferred | "l2sum" | "l2" | "ssim" 
      , "G_lossfn_weight": 1.0            // default
  
      , "E_decay": 0.999                  // Exponential Moving Average for netG: set 0 to disable; default setting 0.999
  
      , "G_optimizer_type": "adam"        // fixed, adam is enough
      , "G_optimizer_lr": 2e-4            // learning rate
      , "G_optimizer_wd": 0               // weight decay, default 0
      , "G_optimizer_clipgrad": null      // unused
      , "G_optimizer_reuse": false
  
      , "G_scheduler_type": "MultiStepLR" // "MultiStepLR" is enough
      , "G_scheduler_milestones": [200000, 400000, 600000, 800000, 1000000, 2000000]
      , "G_scheduler_gamma": 0.5
  
      , "G_regularizer_orthstep": null    // unused
      , "G_regularizer_clipstep": null    // unused
  
      , "G_param_strict": true
      , "E_param_strict": true
  
      , "checkpoint_test": 5000           // for testing
      , "checkpoint_save": 5000           // for saving model
      , "checkpoint_print": 200           // for print
    }
  }
  